datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
 
generator client {
  provider = "prisma-client-js"
}
 
model User {
  id            String         @id @default(cuid())
  username      String         @unique
  password      String
  isActivated   Boolean         @default(true)
  isAdmin       Boolean         @default(false)
  image         String?
  accounts      Account[]
  sessions      Session[]
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}
 
model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 


model Seller {
  id            String         @id @default(cuid())
  name          String        @unique
  isActivated   Boolean        @default(true)
  products      Product[]
}

model Product {
  id            String         @id @default(cuid())
  sellerId      String
  title          String
  date          DateTime
  price         Float
  quantity      Int
  isPaid        Boolean        @default(true)
  isActivated   Boolean        @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  seller Seller @relation(fields: [sellerId], references: [id], onDelete: Cascade)
}